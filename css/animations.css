/* animations.css: keyframes and decorative animations */
/* 背景に浮かぶ装飾を「魚」に差し替えます。 */
/* 絵文字ベースの軽量な実装で画像ファイルを追加せずに表現します。 */
/* animations.css: keyframes and decorative animations */
.shape {
  /*
  animations.css
  - ページ内の装飾アニメーション（浮遊するシェイプ、shimmer、gradient シフト等）を定義します。
  - keyframes をここに集約することで、視覚演出を独立して管理できます。

.shape {
  position: absolute;
  pointer-events: none;
  /* 絵文字サイズ（各 shape で個別に上書き可） */
  font-size: 5rem;
  will-change: transform;
  transform-origin: center;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* 表示される魚（擬似要素で絵文字を挿入） */
.shape::before {
  content: "🐟";
  display: inline-block;
  transform-origin: center;
  /* 軽い揺れ（尾びれのような動き） */
  animation: tail 0.6s infinite ease-in-out;
}

.shape1 {
  left: 6%;
  top: 18%;
  font-size: 6.5rem;
  animation: swim-1 16s infinite linear;
}
.shape2 {
  right: 8%;
  bottom: 22%;
  font-size: 4.5rem;
  animation: swim-2 18s infinite linear;
}

/* 追加の魚: 画面下側に泳ぐバリエーション */
.shape3 {
  left: 20%;
  bottom: 6%;
  font-size: 5.5rem;
  animation: swim-3 20s infinite linear;
}
.shape4 {
  left: 40%;
  bottom: 4%;
  font-size: 4rem;
  animation: swim-4 22s infinite linear;
}
.shape5 {
  right: 20%;
  bottom: 8%;
  font-size: 5rem;
  animation: swim-5 19s infinite linear;
}

/* それぞれ少し異なる泳ぎパターン（下側寄せ） */
@keyframes swim-3 {
  0% {
    transform: translateX(-8vw) translateY(0) rotate(-8deg);
  }
  25% {
    transform: translateX(6vw) translateY(-2vh) rotate(6deg);
  }
  50% {
    transform: translateX(18vw) translateY(0) rotate(8deg);
  }
  75% {
    transform: translateX(6vw) translateY(2vh) rotate(6deg);
  }
  100% {
    transform: translateX(-8vw) translateY(0) rotate(-8deg);
  }
}

@keyframes swim-4 {
  0% {
    transform: translateX(6vw) translateY(0) rotate(6deg);
  }
  25% {
    transform: translateX(-4vw) translateY(-1.5vh) rotate(-5deg);
  }
  50% {
    transform: translateX(-12vw) translateY(0) rotate(-10deg);
  }
  75% {
    transform: translateX(-4vw) translateY(1.5vh) rotate(-5deg);
  }
  100% {
    transform: translateX(6vw) translateY(0) rotate(6deg);
  }
}

@keyframes swim-5 {
  0% {
    transform: translateX(12vw) translateY(0) rotate(10deg);
  }
  25% {
    transform: translateX(-8vw) translateY(-3vh) rotate(-8deg);
  }
  50% {
    transform: translateX(-28vw) translateY(0) rotate(-14deg);
  }
  75% {
    transform: translateX(-8vw) translateY(3vh) rotate(-8deg);
  }
  100% {
    transform: translateX(12vw) translateY(0) rotate(10deg);
  }
}

/* 個別の魚の絵文字（shape の擬似要素を上書き） */
.shape3::before {
  content: "🐠";
}
.shape4::before {
  content: "🐡";
}
.shape5::before {
  content: "🐙";
}

/* ゆったりと画面内を往復しながら上下に揺れる泳ぎ */
@keyframes swim-1 {
  0% {
    transform: translateX(-10vw) translateY(0) rotate(-10deg);
  }
  25% {
    transform: translateX(10vw) translateY(-6vh) rotate(4deg);
  }
  50% {
    transform: translateX(30vw) translateY(0) rotate(10deg);
  }
  75% {
    transform: translateX(10vw) translateY(6vh) rotate(4deg);
  }
  100% {
    transform: translateX(-10vw) translateY(0) rotate(-10deg);
  }
}

@keyframes swim-2 {
  0% {
    transform: translateX(10vw) translateY(0) rotate(8deg);
  }
  25% {
    transform: translateX(-6vw) translateY(-4vh) rotate(-6deg);
  }
  50% {
    transform: translateX(-20vw) translateY(0) rotate(-12deg);
  }
  75% {
    transform: translateX(-6vw) translateY(4vh) rotate(-6deg);
  }
  100% {
    transform: translateX(10vw) translateY(0) rotate(8deg);
  }
}

/* 尾びれの小さな振動 */
@keyframes tail {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(10deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

/* グラデーションアニメーション */
@keyframes gradient-shift {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.gradient-text {
  animation: gradient-shift 5s ease infinite;
}

/* 浮遊アニメーション */
@keyframes float {
  0%,
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
  33% {
    transform: translate(30px, -30px) rotate(120deg);
  }
  66% {
    transform: translate(-20px, 20px) rotate(240deg);
  }
}

.shape {
  animation: float 20s infinite ease-in-out;
}

.shape1 {
  animation-delay: 0s;
}

.shape2 {
  animation-delay: -5s;
}

/* シマーエフェクト */
@keyframes shimmer {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

.project-image::after {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transform: rotate(45deg);
  animation: shimmer 3s infinite;
}

/* フェードインアニメーション（JavaScriptで制御） */
.fade-in {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease-out;
}

.fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}
